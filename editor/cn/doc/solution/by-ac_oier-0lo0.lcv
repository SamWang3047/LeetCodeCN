## 模拟

根据题意进行模拟。

代码：

* []

```Java
class Solution {
    public void setZeroes(int[][] mat) {
        int n = mat.length, m = mat[0].length;
        boolean[] rows = new boolean[n], cols = new boolean[m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (mat[i][j] == 0) rows[i] = cols[j] = true;
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (rows[i] || cols[j]) mat[i][j] = 0;
            }
        }
    }
}
```

* []

```TypeScript
function setZeroes(mat: number[][]): void {
    const n = mat.length, m = mat[0].length
    const rows = new Array<boolean>(n).fill(false), cols = new Array<boolean>(m).fill(false)
    for (let i = 0; i < n; i++) {
        for (let j = 0; j < m; j++) {
            if (mat[i][j] == 0) rows[i] = cols[j] = true
        }
    }
    for (let i = 0; i < n; i++) {
        for (let j = 0; j < m; j++) {
            if (rows[i] || cols[j]) mat[i][j] = 0
        }
    }
};
```

* []

```Python
class Solution:
    def setZeroes(self, mat: List[List[int]]) -> None:
        n, m = len(mat), len(mat[0])
        rows, cols = [False] * n, [False] * m
        for i in range(n):
            for j in range(m):
                if mat[i][j] == 0:
                    rows[i] = cols[j] = True
        for i in range(n):
            for j in range(m):
                mat[i][j] = 0 if rows[i] or cols[j] else mat[i][j]
```

* 时间复杂度：$O(n \times m)$
* 空间复杂度：$O(n + m)$

---

## 最后

**如果有帮助到你，请给题解点个赞和收藏，让更多的人看到 ~ ("▔□▔)/**

也欢迎你 [关注我](https://oscimg.oschina.net/oscnet/up-19688dc1af05cf8bdea43b2a863038ab9e5.png) 和 加入我们的[「组队打卡」](https://leetcode-cn.com/u/ac_oier/)小群 ，提供写「证明」&「思路」的高质量题解。

所有题解已经加入 [刷题指南](https://github.com/SharingSource/LogicStack-LeetCode/wiki)，欢迎 star 哦 ~
