**思路分析：**
因为题目是 找到 nums 中最接近 0 的数（如果有多个答案，请你返回它们中的 最大值 ） 即 nums[i] 与 0 的距离即为该数的绝对值，因此只需要找出数组 nums 里面绝对值最小的元素的最大值。

**实现步骤：**
- 遍历数组定义一个变量 result 记录已遍历元素中绝对值最小且数值最大的元素；
  - ∣num∣ < result，此时需要更新 result 的值为 num；
  - ∣num∣ = result，此时需要比较 result 和 num 的大小 然后将两者较大值更新为 result ；
  - ∣num∣ > result，此时无需进行任何操作。
- 返回值 result 即为数组 nums 里面绝对值最小的元素的最大值。

**具体代码如下：**

* []

```C++
class Solution {
public:
    int findClosestNumber(vector<int>& nums) {
        int result = nums[0];
        for (auto& num:nums)
            /*  nums中最接近0的数字，如果距离相等记录较大的 */
            if(abs(num) < abs(result) || (abs(num) == abs(result) && num > result))
                result = num;
        return result;
    }
};
```

**复杂度分析：**
- 时间复杂度：O(n)，其中 n 为 nums 的长度。
- 空间复杂度：O(1)。

