## 博弈论

这是一道 Nim 游戏的简化版。

**在不知晓博弈论结论前，可以先通过找规律得到猜想，然后再从「何种情况下，先手会处于必胜态」的角度来进行分析。**

根据题意，我们尝试从小范围数据的情况进行讨论：

1. 如果落到先手的局面为「**石子数量为 $1$ - $3$**」的话，那么**先手必胜**；
2. 如果落到先手的局面为「**石子数量为 $4$**」的话，那么先手决策完（无论何种决策），交到后手的局面为「石子数量为 $1$ - $3$」，即此时后手必胜，对应**先手必败**（到这里我们有一个推论：如果交给先手的局面为 $4$ 的话，那么先手必败）；
3. 如果落到先手的局面为「**石子数量为 $5$ - $7$**」的话，那么先手可以通过控制选择石子的数量，来使得后手处于「石子数量为 $4$」的局面（此时后手必败），因此**先手必胜**；
4. 如果落到先手的局面为「**石子数量为 $8$**」的话，由于每次只能选 $1$ - $3$ 个石子，因此交由后手的局面为 $5$ - $7$，根据流程 $3$ 我们知道此时**先手必败**；
   ...

到这里，我们猜想 **当起始局面石子数量为 $4$ 的倍数，则先手必败，否则先手必胜（即 `n % 4 != 0` 时，先手必胜）。**

然后我们通过「归纳法」证明一下该猜想的正确性。

在上面的「找规律」分析中，我们分情况讨论了最后一个决胜回合（我们称「剩余石子数量少于等于 $4$ 的局面」为最后回合）的情况：**如果交由先手的石子数量为 $4$，那么先手必败，否则先手必胜。**

而对于「最后回合」前的任意回合（石子数量大于 $4$），我们需要证明 **先手可以通过调整所选石子数量，来维持「`n % 4 != 0`」直到最后回合。**

如果起始对先手而言满足「`n % 4 != 0`」，此时先手可以通过选择石子数量为「`n % 4`」来确保交到后手的局面为 $4$ 的倍数。

那么根据推论，此时的原始后手作为下一回合的先手角色，且面临石子数量为 $4$ 的倍数的局面，为必败态。

进一步的解释就是，由于原始后手面临石子数量为 $4$ 的倍数的局面，且只能选 $1$ - $3$ 个石子，因此无论如何选择，重新回到原始先手的仍然满足「`n % 4 != 0`」（非 $4$ 的倍数）。

因此 **原始先手只需要确保每次都选择「`x % 4`」个石子（$x$ 为当前石子数量），就可以确保交由自己的局面一直满足「`x % 4 != 0`」，交由对方的局面一直满足「`x % 4 == 0`」，直到最后回合的到来。**

至此，我们证明了 **如果起始石子数量 $n$ 满足「`n % 4 != 0`」条件，那么先手必胜。**

代码：

* []

```Java
class Solution {
    public boolean canWinNim(int n) {
        return n % 4 != 0;
    }
}
```

* 时间复杂度：$O(1)$
* 空间复杂度：$O(1)$

---

## 其他「博弈论」相关内容

意犹未尽？可以看看如下博弈论题目。

| 题目                                                         | 题解                                                         | 难度 | 推荐指数 |
| ------------------------------------------------------------ | ------------------------------------------------------------ | ---- | -------- |
| [810. 黑板异或游戏](https://leetcode-cn.com/problems/chalkboard-xor-game/) | [LeetCode 题解链接](https://leetcode-cn.com/problems/chalkboard-xor-game/solution/gong-shui-san-xie-noxiang-xin-ke-xue-xi-ges7k/) | 困难 | 🤩🤩🤩🤩     |
| [877. 石子游戏](https://leetcode-cn.com/problems/stone-game/) | [LeetCode 题解链接](https://leetcode-cn.com/problems/stone-game/solution/gong-shui-san-xie-jing-dian-qu-jian-dp-j-wn31/) | 中等 | 🤩🤩🤩🤩     |

**注：以上目录整理来自 [wiki](https://github.com/SharingSource/LogicStack-LeetCode/wiki/博弈论)，任何形式的转载引用请保留出处。**

---

## 最后

**如果有帮助到你，请给题解点个赞和收藏，让更多的人看到 ~ ("▔□▔)/**

也欢迎你 [关注我](https://oscimg.oschina.net/oscnet/up-19688dc1af05cf8bdea43b2a863038ab9e5.png)（公主号后台回复「送书」即可参与长期看题解学算法送实体书活动）或 加入[「组队打卡」](https://leetcode-cn.com/u/ac_oier/)小群 ，提供写「证明」&「思路」的高质量题解。

所有题解已经加入 [刷题指南](https://github.com/SharingSource/LogicStack-LeetCode/wiki)，欢迎 star 哦 ~
