### 解题思路

二分查找，找到之後再向左右擴展找頭尾

### 代码

* java

```java
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] res = new int[]{-1,-1};
        if(nums.length == 0){
            return new int[]{-1,-1};
        }

        if(nums.length < 3){
            int count = 0;
            for (int i = 0; i < nums.length; i++) {
                if(nums[i] == target){
                    res[count] = i;
                    count++;
                }
            }
            if(count == 0){
                return new int[]{-1,-1};
            }else if(count == 1){
                res[count] = res[0];
                return res;
            }else {
                return res;
            }

        }

        int low = 0;
        int high = nums.length-1;
        int mid;
        int intdx = -1;
        if(nums[low]>target || nums[high] < target){
            return res;
        }
        while (low<=high){
            
            mid = (low + high)/2;
            if(nums[mid] > target){
                high = mid - 1;
            }else if(nums[mid] < target){
                low = mid + 1;
            }else {
                intdx = mid;
                break;
            }
        }
        if(intdx == -1){
            return res;
        }
        int start = intdx;
        int end = intdx;
        while (end < nums.length-1 && nums[end] == nums[end + 1]){
            end++;
        }
        while (start > 0 && nums[start] == nums[start - 1]){
            start--;
        }
        res[0] = start;
        res[1] = end;
        return res;

    }
}
```

