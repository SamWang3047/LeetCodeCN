### 解题思路

1、使用辅助数组，按奇偶位归类，分别排序后合并。

### 执行结果

![捕获.PNG](https://pic.leetcode-cn.com/1649209473-vuyJzg-%E6%8D%95%E8%8E%B7.PNG)

### 代码

* java

```java
class Solution {
    public int[] sortEvenOdd(int[] nums) {

        // 奇数下标
        List<Integer> oddList = new LinkedList<>();
        for (int i = 1; i < nums.length; ) {
            oddList.add(nums[i]);
            i += 2;
        }
        // 非递增排序：从大到小
        Collections.sort(oddList, (i1, i2) -> {
            return i2 - i1;
        });

        // 偶数下标
        List<Integer> evenList = new LinkedList<>();
        for (int i = 0; i < nums.length; ) {
            evenList.add(nums[i]);
            i += 2;
        }
        // 非递减排序：从小到大
        Collections.sort(evenList, (i1, i2) -> {
            return i1 - i2;
        });

        // 分别排序后重新合并
        for (int i = 0; i < nums.length; i++) {
            if (i % 2 == 1) {
                // 奇数
                nums[i] = oddList.get(i / 2);
            } else {
                // 偶数
                nums[i] = evenList.get(i / 2);
            }
        }
        return nums;
    }
}
```

