## 模拟

根据题意继续模拟即可：使用数组 `idxs` 记录下每个字符最开始出现的下标即可。

代码：

* []

```Java
class Solution {
    public int maxLengthBetweenEqualCharacters(String s) {
        int[] idxs = new int[26];
        Arrays.fill(idxs, 310);
        int n = s.length(), ans = -1;
        for (int i = 0; i < n; i++) {
            int u = s.charAt(i) - 'a';
            idxs[u] = Math.min(idxs[u], i);
            ans = Math.max(ans, i - idxs[u] - 1);
        }
        return ans;
    }
}
```

* []

```Typescript
function maxLengthBetweenEqualCharacters(s: string): number {
    const idxs = new Array<number>(26).fill(310)
    let n = s.length, ans = -1
    for (let i = 0; i < n; i++) {
        const u = s.charCodeAt(i) - 'a'.charCodeAt(0)
        idxs[u] = Math.min(idxs[u], i)
        ans = Math.max(ans, i - idxs[u] - 1)
    }
    return ans
};
```

* []

```Python
class Solution:
    def maxLengthBetweenEqualCharacters(self, s: str) -> int:
        idxs = {}
        ans = -1
        for i, c in enumerate(s):
            idxs[c] = idxs[c] if c in idxs else i
            ans = max(ans, i - idxs[c] - 1)
        return ans
```

* 时间复杂度：$O(n)$
* 空间复杂度：$O(C)$，其中 $C = 26$ 为字符集大小

---

## 最后

**如果有帮助到你，请给题解点个赞和收藏，让更多的人看到 ~ ("▔□▔)/**

也欢迎你 [关注我](https://oscimg.oschina.net/oscnet/up-19688dc1af05cf8bdea43b2a863038ab9e5.png) 和 加入我们的[「组队打卡」](https://leetcode-cn.com/u/ac_oier/)小群 ，提供写「证明」&「思路」的高质量题解。

所有题解已经加入 [刷题指南](https://github.com/SharingSource/LogicStack-LeetCode/wiki)，欢迎 star 哦 ~
