暴力法超时
双指针，动态规划

### 代码

* java

```java
class Solution {
    public int maxProfit(int[] prices) {

        //暴力法  时间超限
        // int nums[]=new int [prices.length];
        // int max=0;
        // for(int i=0;i<prices.length-1;i++){
        //     for(int j=i+1;j<prices.length;j++){
        //         if(prices[j]-prices[i]>max){
        //             max=prices[j]-prices[i];
        //         }
        //     }
        // }
        // return max;


    // //双指针
    //     int max=0;
    //     int min=prices[0];
    //     for(int i=0;i<prices.length;i++){
    //         min=Math.min(prices[i],min);
    //         max=Math.max(prices[i]-min,max);
    //     }
    //     return max;


    //动态规划
    int max=0;
    int min=prices[0];
    if(prices.length<=1){
        return 0;
    }
    for(int i=1;i<prices.length;i++){
           min=Math.min(prices[i],min);
           max=Math.max(max,prices[i]-min);
    }
 
    return max;
    }
}
```

